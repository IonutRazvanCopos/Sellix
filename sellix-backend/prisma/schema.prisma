generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  email            String         @unique
  password         String
  username         String?
  phone            String?
  city             String?
  county           String?
  avatar           String?
  createdAt        DateTime       @default(now())
  listings         Listing[]
  sentMessages     Message[]      @relation("MessagesSent")
  receivedMessages Message[]      @relation("MessagesReceived")
  conversations    Conversation[] @relation("ConversationParticipants")
  role             Role           @default(USER)
}

enum Role {
  ADMIN
  USER
}

model Message {
  id             Int      @id @default(autoincrement())
  content        String
  timestamp      DateTime @default(now())
  senderId       Int
  receiverId     Int
  listingId      Int
  conversationId Int

  sender       User         @relation("MessagesSent", fields: [senderId], references: [id])
  receiver     User         @relation("MessagesReceived", fields: [receiverId], references: [id])
  listing      Listing      @relation(fields: [listingId], references: [id])
  conversation Conversation @relation("ConversationMessages", fields: [conversationId], references: [id])
}

model Conversation {
  id           Int       @id @default(autoincrement())
  participants User[]    @relation("ConversationParticipants")
  messages     Message[] @relation("ConversationMessages")
  listing      Listing   @relation(fields: [listingId], references: [id])
  listingId    Int
  createdAt    DateTime  @default(now())
}

model Listing {
  id            Int         @id @default(autoincrement())
  title         String
  description   String
  price         Float
  currency      Currency
  type          ListingType
  createdAt     DateTime    @default(now())
  userId        Int
  categoryId    Int
  subcategoryId Int?

  user          User           @relation(fields: [userId], references: [id])
  category      Category       @relation(fields: [categoryId], references: [id])
  subcategory   Subcategory?   @relation(fields: [subcategoryId], references: [id])
  images        Image[]
  conversations Conversation[]
  messages      Message[]

  approved   Boolean   @default(false)
  visible    Boolean   @default(true)
}

model Image {
  id        Int     @id @default(autoincrement())
  url       String
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId Int
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  listings      Listing[]
  subcategories Subcategory[]
}

model Subcategory {
  id         Int       @id @default(autoincrement())
  name       String
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  listings   Listing[]
}

enum Currency {
  RON
  EUR
}

enum ListingType {
  SELL
  BID
}
